#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.6.0 on 2011-12-02 16:39:37.

require 'adwords_api/errors'

module AdwordsApi; module V13; module AccountService
  class AccountServiceRegistry
    ACCOUNTSERVICE_METHODS = {:get_account_info=>{:input=>[], :output=>{:name=>"get_account_info_response", :fields=>[{:name=>:get_account_info_return, :type=>"AccountInfo"}]}}, :get_client_account_infos=>{:input=>[], :output=>{:name=>"get_client_account_infos_response", :fields=>[{:name=>:get_client_account_infos_return, :type=>"ClientAccountInfo", :max_occurs=>:unbounded}]}}, :get_client_accounts=>{:input=>[], :output=>{:name=>"get_client_accounts_response", :fields=>[{:name=>:get_client_accounts_return, :type=>"string", :max_occurs=>:unbounded}]}}, :get_mcc_alerts=>{:input=>[], :output=>{:name=>"get_mcc_alerts_response", :fields=>[{:name=>:get_mcc_alerts_return, :type=>"MccAlert", :max_occurs=>:unbounded}]}}, :update_account_info=>{:input=>[{:name=>:account_info, :type=>"AccountInfo"}], :output=>{:name=>"update_account_info_response", :fields=>[]}}}
    ACCOUNTSERVICE_TYPES = {:AccountInfo=>{:fields=>[{:name=>:billing_address, :type=>"Address"}, {:name=>:currency_code, :type=>"string"}, {:name=>:customer_id, :type=>"long", :min_occurs=>0}, {:name=>:default_network_targeting, :type=>"NetworkTarget"}, {:name=>:descriptive_name, :type=>"string"}, {:name=>:email_promotions_preferences, :type=>"EmailPromotionsPreferences"}, {:name=>:language_preference, :type=>"string"}, {:name=>:primary_address, :type=>"Address"}, {:name=>:primary_business_category, :type=>"string"}, {:name=>:time_zone_effective_date, :type=>"long", :min_occurs=>0}, {:name=>:time_zone_id, :type=>"string"}]}, :Address=>{:fields=>[{:name=>:address_line1, :type=>"string"}, {:name=>:address_line2, :type=>"string"}, {:name=>:city, :type=>"string"}, {:name=>:company_name, :type=>"string"}, {:name=>:country_code, :type=>"string"}, {:name=>:email_address, :type=>"string"}, {:name=>:fax_number, :type=>"string"}, {:name=>:name, :type=>"string"}, {:name=>:phone_number, :type=>"string"}, {:name=>:postal_code, :type=>"string"}, {:name=>:state, :type=>"string"}]}, :ClientAccountInfo=>{:fields=>[{:name=>:email_address, :type=>"string"}, {:name=>:is_customer_manager, :type=>"boolean"}]}, :EmailPromotionsPreferences=>{:fields=>[{:name=>:account_performance_enabled, :type=>"boolean"}, {:name=>:disapproved_ads_enabled, :type=>"boolean"}, {:name=>:market_research_enabled, :type=>"boolean"}, {:name=>:newsletter_enabled, :type=>"boolean"}, {:name=>:promotions_enabled, :type=>"boolean"}]}, :MccAlert=>{:fields=>[{:name=>:client_company_name, :type=>"string"}, {:name=>:client_customer_id, :type=>"long"}, {:name=>:client_login, :type=>"string"}, {:name=>:client_name, :type=>"string"}, {:name=>:priority, :type=>"MccAlertPriority"}, {:name=>:trigger_time, :type=>"dateTime"}, {:name=>:type, :type=>"MccAlertType"}]}, :NetworkTarget=>{:fields=>[{:name=>:network_types, :type=>"NetworkType", :min_occurs=>0, :max_occurs=>:unbounded}]}, :MccAlertPriority=>{:fields=>[]}, :MccAlertType=>{:fields=>[]}, :NetworkType=>{:fields=>[]}}
    ACCOUNTSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return ACCOUNTSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return ACCOUNTSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return ACCOUNTSERVICE_NAMESPACES[index]
    end
  end

  class ApiException < AdwordsApi::Errors::ApiException
    attr_reader :code  # int
    attr_reader :errors  # ApiError
    attr_reader :internal  # boolean
    attr_reader :message  # string
    attr_reader :trigger  # string
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
