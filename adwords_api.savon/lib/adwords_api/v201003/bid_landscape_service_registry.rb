#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.1 on 2011-09-21 12:00:57.

require 'adwords_api/errors'

module AdwordsApi; module V201003; module BidLandscapeService
  class BidLandscapeServiceRegistry
    BIDLANDSCAPESERVICE_METHODS = {:get_bid_landscape=>{:output=>{:fields=>[{:type=>"BidLandscape", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:rval}], :name=>"get_bid_landscape_response"}, :input=>[{:type=>"BidLandscapeSelector", :min_occurs=>0, :max_occurs=>1, :name=>:selector}]}}
    BIDLANDSCAPESERVICE_TYPES = {:BidLandscape=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:campaign_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:ad_group_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:start_date}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:end_date}, {:type=>"BidLandscape.LandscapePoint", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:landscape_points}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:bid_landscape_type}], :abstract=>true}, :DoubleValue=>{:fields=>[{:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:number}], :base=>"NumberValue"}, :Money=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:micro_amount}], :base=>"ComparableValue"}, :NumberValue=>{:fields=>[], :base=>"ComparableValue", :abstract=>true}, :OperationAccessDenied=>{:fields=>[{:type=>"OperationAccessDenied.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}], :base=>"ApiError"}, :SoapHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:auth_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_customer_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_email}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:developer_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:user_agent}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:validate_only}]}, :CriterionBidLandscape=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:criterion_id}], :base=>"BidLandscape"}, :BidLandscapeIdFilter=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:campaign_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:ad_group_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:criterion_id}]}, :"BidLandscape.LandscapePoint"=>{:fields=>[{:type=>"Money", :min_occurs=>0, :max_occurs=>1, :name=>:bid}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:clicks}, {:type=>"Money", :min_occurs=>0, :max_occurs=>1, :name=>:cost}, {:type=>"Money", :min_occurs=>0, :max_occurs=>1, :name=>:marginal_cpc}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:impressions}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:request_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:operations}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:response_time}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:units}]}, :LongValue=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:number}], :base=>"NumberValue"}, :CriterionBidLandscapeSelector=>{:fields=>[], :base=>"BidLandscapeSelector"}, :ComparableValue=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:comparable_value_type}], :abstract=>true}, :BidLandscapeSelector=>{:fields=>[{:type=>"BidLandscapeIdFilter", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:id_filters}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:bid_landscape_selector_type}], :abstract=>true}}
    BIDLANDSCAPESERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return BIDLANDSCAPESERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return BIDLANDSCAPESERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return BIDLANDSCAPESERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
