#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.6.0 on 2011-12-02 16:39:38.

require 'adwords_api/errors'

module AdwordsApi; module V13; module ReportService
  class ReportServiceRegistry
    REPORTSERVICE_METHODS = {:delete_report=>{:input=>[{:name=>:report_job_id, :type=>"long"}], :output=>{:name=>"delete_report_response", :fields=>[]}}, :get_all_jobs=>{:input=>[], :output=>{:name=>"get_all_jobs_response", :fields=>[{:name=>:get_all_jobs_return, :type=>"ReportJob", :max_occurs=>:unbounded}]}}, :get_gzip_report_download_url=>{:input=>[{:name=>:report_job_id, :type=>"long"}], :output=>{:name=>"get_gzip_report_download_url_response", :fields=>[{:name=>:get_gzip_report_download_url_return, :type=>"string"}]}}, :get_report_download_url=>{:input=>[{:name=>:report_job_id, :type=>"long"}], :output=>{:name=>"get_report_download_url_response", :fields=>[{:name=>:get_report_download_url_return, :type=>"string"}]}}, :get_report_job_status=>{:input=>[{:name=>:report_job_id, :type=>"long"}], :output=>{:name=>"get_report_job_status_response", :fields=>[{:name=>:get_report_job_status_return, :type=>"ReportJobStatus"}]}}, :schedule_report_job=>{:input=>[{:name=>:job, :type=>"ReportJob"}], :output=>{:name=>"schedule_report_job_response", :fields=>[{:name=>:schedule_report_job_return, :type=>"long"}]}}, :validate_report_job=>{:input=>[{:name=>:job, :type=>"ReportJob"}], :output=>{:name=>"validate_report_job_response", :fields=>[]}}}
    REPORTSERVICE_TYPES = {:DefinedReportJob=>{:fields=>[{:name=>:ad_group_statuses, :type=>"AdGroupStatus", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:ad_groups, :type=>"long", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:ad_words_type, :type=>"AdWordsType", :min_occurs=>0}, {:name=>:aggregation_types, :type=>"string", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:campaign_statuses, :type=>"CampaignStatus", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:campaigns, :type=>"int", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:include_zero_impression, :type=>"boolean", :min_occurs=>0}, {:name=>:keyword_statuses, :type=>"KeywordStatus", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:keyword_type, :type=>"KeywordType", :min_occurs=>0}, {:name=>:keywords, :type=>"string", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:selected_columns, :type=>"string", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:selected_report_type, :type=>"string"}], :base=>"ReportJob"}, :ReportJob=>{:fields=>[{:name=>:client_emails, :type=>"string", :min_occurs=>0, :max_occurs=>:unbounded}, {:name=>:cross_client, :type=>"boolean", :min_occurs=>0}, {:name=>:end_day, :type=>"date"}, {:name=>:id, :type=>"long", :min_occurs=>0}, {:name=>:name, :type=>"string", :min_occurs=>0}, {:name=>:start_day, :type=>"date"}, {:name=>:status, :type=>"ReportJobStatus", :min_occurs=>0}], :abstract=>true}, :AdGroupStatus=>{:fields=>[]}, :AdWordsType=>{:fields=>[]}, :CampaignStatus=>{:fields=>[]}, :KeywordStatus=>{:fields=>[]}, :KeywordType=>{:fields=>[]}, :ReportJobStatus=>{:fields=>[]}}
    REPORTSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return REPORTSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return REPORTSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return REPORTSERVICE_NAMESPACES[index]
    end
  end

  class ApiException < AdwordsApi::Errors::ApiException
    attr_reader :code  # int
    attr_reader :errors  # ApiError
    attr_reader :internal  # boolean
    attr_reader :message  # string
    attr_reader :trigger  # string
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
