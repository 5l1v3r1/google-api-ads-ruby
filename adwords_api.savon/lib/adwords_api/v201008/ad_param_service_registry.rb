#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.0 on 2011-07-19 18:48:48.

module AdwordsApi; module V201008; module AdParamService
  class AdParamServiceRegistry
    ADPARAMSERVICE_METHODS = {:get=>{:input=>[{:type=>"AdParamSelector", :max_occurs=>1, :name=>:selector, :min_occurs=>0}], :output=>{:fields=>[{:type=>"AdParamPage", :max_occurs=>1, :name=>:rval, :min_occurs=>0}], :name=>"get_response"}}, :mutate=>{:input=>[{:type=>"AdParamOperation", :max_occurs=>:unbounded, :name=>:operations, :min_occurs=>0}], :output=>{:fields=>[{:type=>"AdParam", :max_occurs=>:unbounded, :name=>:rval, :min_occurs=>0}], :name=>"mutate_response"}}}
    ADPARAMSERVICE_TYPES = {:Operation=>{:fields=>[{:type=>"Operator", :max_occurs=>1, :name=>:operator, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:operation_type, :min_occurs=>0}], :abstract=>true}, :PolicyViolationKey=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:policy_name, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:violating_text, :min_occurs=>0}]}, :AdParam=>{:fields=>[{:type=>"long", :max_occurs=>1, :name=>:ad_group_id, :min_occurs=>0}, {:type=>"long", :max_occurs=>1, :name=>:criterion_id, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:insertion_text, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:param_index, :min_occurs=>0}]}, :SoapHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:auth_token, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:client_customer_id, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:client_email, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:developer_token, :min_occurs=>0}, {:type=>"string", :max_occurs=>1, :name=>:user_agent, :min_occurs=>0}, {:type=>"boolean", :max_occurs=>1, :name=>:validate_only, :min_occurs=>0}, {:type=>"boolean", :max_occurs=>1, :name=>:partial_failure, :min_occurs=>0}]}, :AdParamOperation=>{:fields=>[{:type=>"AdParam", :max_occurs=>1, :name=>:operand, :min_occurs=>0}], :base=>"Operation"}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :max_occurs=>1, :name=>:request_id, :min_occurs=>0}, {:type=>"long", :max_occurs=>1, :name=>:operations, :min_occurs=>0}, {:type=>"long", :max_occurs=>1, :name=>:response_time, :min_occurs=>0}, {:type=>"long", :max_occurs=>1, :name=>:units, :min_occurs=>0}]}, :"PolicyViolationError.Part"=>{:fields=>[{:type=>"int", :max_occurs=>1, :name=>:index, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:length, :min_occurs=>0}]}, :AdParamPage=>{:fields=>[{:type=>"AdParam", :max_occurs=>:unbounded, :name=>:entries, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:total_num_entries, :min_occurs=>0}]}, :Paging=>{:fields=>[{:type=>"int", :max_occurs=>1, :name=>:start_index, :min_occurs=>0}, {:type=>"int", :max_occurs=>1, :name=>:number_results, :min_occurs=>0}]}, :AdParamSelector=>{:fields=>[{:type=>"long", :max_occurs=>:unbounded, :name=>:ad_group_ids, :min_occurs=>0}, {:type=>"long", :max_occurs=>:unbounded, :name=>:criteria_id, :min_occurs=>0}, {:type=>"Paging", :max_occurs=>1, :name=>:paging, :min_occurs=>0}]}}
    ADPARAMSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return ADPARAMSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return ADPARAMSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return ADPARAMSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
