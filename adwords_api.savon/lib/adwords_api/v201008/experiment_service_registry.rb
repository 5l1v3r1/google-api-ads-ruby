#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.1 on 2011-09-21 11:59:52.

require 'adwords_api/errors'

module AdwordsApi; module V201008; module ExperimentService
  class ExperimentServiceRegistry
    EXPERIMENTSERVICE_METHODS = {:mutate=>{:output=>{:fields=>[{:type=>"ExperimentReturnValue", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"mutate_response"}, :input=>[{:type=>"ExperimentOperation", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:operations}]}, :get=>{:output=>{:fields=>[{:type=>"ExperimentPage", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_response"}, :input=>[{:type=>"ExperimentSelector", :min_occurs=>0, :max_occurs=>1, :name=>:selector}]}}
    EXPERIMENTSERVICE_TYPES = {:ListReturnValue=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:list_return_value_type}], :abstract=>true}, :ExperimentOperation=>{:fields=>[{:type=>"Experiment", :min_occurs=>0, :max_occurs=>1, :name=>:operand}], :base=>"Operation"}, :EntityNotFound=>{:fields=>[{:type=>"EntityNotFound.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}], :base=>"ApiError"}, :Operation=>{:fields=>[{:type=>"Operator", :min_occurs=>0, :max_occurs=>1, :name=>:operator}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:operation_type}], :abstract=>true}, :ExperimentReturnValue=>{:fields=>[{:type=>"Experiment", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:value}], :base=>"ListReturnValue"}, :Page=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:total_num_entries}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:page_type}], :abstract=>true}, :ExperimentPage=>{:fields=>[{:type=>"Experiment", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:entries}], :base=>"Page"}, :OperationAccessDenied=>{:fields=>[{:type=>"OperationAccessDenied.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}], :base=>"ApiError"}, :SoapHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:auth_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_customer_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_email}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:developer_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:user_agent}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:validate_only}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:partial_failure}]}, :ExperimentSelector=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:experiment_ids}, {:type=>"long", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:campaign_ids}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:include_stats}]}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:request_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:operations}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:response_time}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:units}]}, :ExperimentSummaryStats=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:ad_groups_count}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:ad_group_criteria_count}]}, :Experiment=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:control_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:campaign_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:name}, {:type=>"ExperimentStatus", :min_occurs=>0, :max_occurs=>1, :name=>:status}, {:type=>"ExperimentServingStatus", :min_occurs=>0, :max_occurs=>1, :name=>:serving_status}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:query_percentage}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:start_date_time}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:end_date_time}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:last_modified_date_time}, {:type=>"ExperimentSummaryStats", :min_occurs=>0, :max_occurs=>1, :name=>:experiment_summary_stats}]}}
    EXPERIMENTSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return EXPERIMENTSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return EXPERIMENTSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return EXPERIMENTSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
