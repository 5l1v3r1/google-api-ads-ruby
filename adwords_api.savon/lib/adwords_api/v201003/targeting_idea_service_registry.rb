#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.1 on 2011-09-21 12:01:02.

require 'adwords_api/errors'

module AdwordsApi; module V201003; module TargetingIdeaService
  class TargetingIdeaServiceRegistry
    TARGETINGIDEASERVICE_METHODS = {:get_bulk_keyword_ideas=>{:output=>{:fields=>[{:type=>"TargetingIdeaPage", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_bulk_keyword_ideas_response"}, :input=>[{:type=>"TargetingIdeaSelector", :min_occurs=>0, :max_occurs=>1, :name=>:selector}]}, :get=>{:output=>{:fields=>[{:type=>"TargetingIdeaPage", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_response"}, :input=>[{:type=>"TargetingIdeaSelector", :min_occurs=>0, :max_occurs=>1, :name=>:selector}]}}
    TARGETINGIDEASERVICE_TYPES = {:TargetingIdea=>{:fields=>[{:type=>"Type_AttributeMapEntry", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:data}]}, :PlacementAttribute=>{:fields=>[{:type=>"Placement", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :AverageTargetedMonthlySearchesSearchParameter=>{:fields=>[{:type=>"LongComparisonOperation", :min_occurs=>0, :max_occurs=>1, :name=>:operation}], :base=>"SearchParameter"}, :AdScheduleTarget=>{:fields=>[{:type=>"DayOfWeek", :min_occurs=>0, :max_occurs=>1, :name=>:day_of_week}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:start_hour}, {:type=>"MinuteOfHour", :min_occurs=>0, :max_occurs=>1, :name=>:start_minute}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:end_hour}, {:type=>"MinuteOfHour", :min_occurs=>0, :max_occurs=>1, :name=>:end_minute}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:bid_multiplier}], :base=>"Target", :ns=>0}, :RelatedToKeywordSearchParameter=>{:fields=>[{:type=>"Keyword", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:keywords}], :base=>"SearchParameter"}, :MonthlySearchVolumeAttribute=>{:fields=>[{:type=>"MonthlySearchVolume", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:value}], :base=>"Attribute"}, :Vertical=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:path}], :base=>"Criterion", :ns=>0}, :"PolicyViolationError.Part"=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:index}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:length}], :ns=>0}, :ProvinceTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_code}], :base=>"GeoTarget", :ns=>0}, :Placement=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:url}], :base=>"Criterion", :ns=>0}, :MobileCarrierTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:carrier_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :base=>"MobileTarget", :ns=>0}, :KeywordAttribute=>{:fields=>[{:type=>"Keyword", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :KeywordCategoryIdSearchParameter=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:category_id}], :base=>"SearchParameter"}, :WebpageDescriptorAttribute=>{:fields=>[{:type=>"WebpageDescriptor", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :DemographicTarget=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:bid_modifier}], :base=>"Target", :ns=>0, :abstract=>true}, :Attribute=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:attribute_type}], :abstract=>true}, :IdeaTypeAttribute=>{:fields=>[{:type=>"IdeaType", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :DoubleComparisonOperation=>{:fields=>[{:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:minimum}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:maximum}, {:type=>"double", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:excludes}]}, :SeedAdGroupIdSearchParameter=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:ad_group_id}], :base=>"SearchParameter"}, :BooleanAttribute=>{:fields=>[{:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :AdTypeSearchParameter=>{:fields=>[{:type=>"SiteConstants.AdType", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:ad_types}], :base=>"SearchParameter"}, :PlacementTypeSearchParameter=>{:fields=>[{:type=>"SiteConstants.PlacementType", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:placement_types}], :base=>"SearchParameter"}, :MonthlySearchVolume=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:year}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:month}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:count}]}, :PolygonTarget=>{:fields=>[{:type=>"GeoPoint", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:vertices}], :base=>"GeoTarget", :ns=>0}, :NumberValue=>{:fields=>[], :base=>"ComparableValue", :ns=>0, :abstract=>true}, :Keyword=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:text}, {:type=>"KeywordMatchType", :min_occurs=>0, :max_occurs=>1, :name=>:match_type}], :base=>"Criterion", :ns=>0}, :MetroTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:metro_code}], :base=>"GeoTarget", :ns=>0}, :GeoPoint=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:latitude_in_micro_degrees}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:longitude_in_micro_degrees}], :ns=>0}, :IntegerSetAttribute=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:value}], :base=>"Attribute"}, :IncludeAdultContentSearchParameter=>{:fields=>[], :base=>"SearchParameter"}, :WebpageDescriptor=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:url}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:title}]}, :Type_AttributeMapEntry=>{:fields=>[{:type=>"AttributeType", :min_occurs=>0, :max_occurs=>1, :name=>:key}, {:type=>"Attribute", :min_occurs=>0, :max_occurs=>1, :name=>:value}]}, :ComparableValue=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:comparable_value_type}], :ns=>0, :abstract=>true}, :CountryTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :base=>"GeoTarget", :ns=>0}, :Address=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:street_address}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:street_address2}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:city_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:postal_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :ns=>0}, :DoubleAttribute=>{:fields=>[{:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :SearchShareSearchParameter=>{:fields=>[{:type=>"DoubleComparisonOperation", :min_occurs=>0, :max_occurs=>1, :name=>:operation}], :base=>"SearchParameter"}, :AdShareSearchParameter=>{:fields=>[{:type=>"DoubleComparisonOperation", :min_occurs=>0, :max_occurs=>1, :name=>:operation}], :base=>"SearchParameter"}, :MoneyAttribute=>{:fields=>[{:type=>"Money", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :LongComparisonOperation=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:minimum}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:maximum}, {:type=>"long", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:excludes}]}, :PlatformTarget=>{:fields=>[{:type=>"PlatformType", :min_occurs=>0, :max_occurs=>1, :name=>:platform_type}], :base=>"Target", :ns=>0}, :Money=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:micro_amount}], :base=>"ComparableValue", :ns=>0}, :IdeaTextMatchesSearchParameter=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:included}, {:type=>"string", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:excluded}, {:type=>"MatchAction", :min_occurs=>0, :max_occurs=>1, :name=>:priority_action}], :base=>"SearchParameter"}, :LanguageTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:language_code}], :base=>"Target", :ns=>0}, :EntityNotFound=>{:fields=>[{:type=>"EntityNotFound.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}], :base=>"ApiError", :ns=>0}, :IntegerAttribute=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :TargetingIdeaSelector=>{:fields=>[{:type=>"SearchParameter", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:search_parameters}, {:type=>"IdeaType", :min_occurs=>0, :max_occurs=>1, :name=>:idea_type}, {:type=>"RequestType", :min_occurs=>0, :max_occurs=>1, :name=>:request_type}, {:type=>"AttributeType", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:requested_attribute_types}, {:type=>"Paging", :min_occurs=>0, :max_occurs=>1, :name=>:paging}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:locale_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:currency_code}]}, :StringAttribute=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :EntityCountLimitExceeded=>{:fields=>[{:type=>"EntityCountLimitExceeded.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:enclosing_id}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:limit}], :base=>"ApiError", :ns=>0}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:request_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:operations}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:response_time}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:units}], :ns=>0}, :CityTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:city_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :base=>"GeoTarget", :ns=>0}, :CountryTargetSearchParameter=>{:fields=>[{:type=>"CountryTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:country_targets}], :base=>"SearchParameter"}, :SearchParameter=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:search_parameter_type}], :abstract=>true}, :Paging=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:start_index}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:number_results}], :ns=>0}, :AdFormatSpecListAttribute=>{:fields=>[{:type=>"AdFormatSpec", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:value}], :base=>"Attribute"}, :Target=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:target_type}], :ns=>0, :abstract=>true}, :LongRangeAttribute=>{:fields=>[{:type=>"Range", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :LanguageTargetSearchParameter=>{:fields=>[{:type=>"LanguageTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:language_targets}], :base=>"SearchParameter"}, :MobileSearchParameter=>{:fields=>[], :base=>"SearchParameter"}, :MobileTarget=>{:fields=>[], :base=>"Target", :ns=>0, :abstract=>true}, :InStreamAdInfoAttribute=>{:fields=>[{:type=>"InStreamAdInfo", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :GlobalMonthlySearchesSearchParameter=>{:fields=>[{:type=>"LongComparisonOperation", :min_occurs=>0, :max_occurs=>1, :name=>:operation}], :base=>"SearchParameter"}, :Criterion=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:criterion_type}], :ns=>0}, :GeoTarget=>{:fields=>[{:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:excluded}], :base=>"Target", :ns=>0, :abstract=>true}, :DoubleValue=>{:fields=>[{:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:number}], :base=>"NumberValue", :ns=>0}, :TargetingIdeaPage=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:total_num_entries}, {:type=>"TargetingIdea", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:entries}]}, :PlacementTypeAttribute=>{:fields=>[{:type=>"SiteConstants.PlacementType", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :CompetitionSearchParameter=>{:fields=>[{:type=>"CompetitionSearchParameter.Level", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:levels}], :base=>"SearchParameter"}, :SoapHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:auth_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_customer_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_email}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:developer_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:user_agent}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:validate_only}], :ns=>0}, :AgeTarget=>{:fields=>[{:type=>"AgeTarget.Age", :min_occurs=>0, :max_occurs=>1, :name=>:age}], :base=>"DemographicTarget", :ns=>0}, :RelatedToUrlSearchParameter=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:urls}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:include_sub_urls}], :base=>"SearchParameter"}, :ProximityTarget=>{:fields=>[{:type=>"GeoPoint", :min_occurs=>0, :max_occurs=>1, :name=>:geo_point}, {:type=>"ProximityTarget.DistanceUnits", :min_occurs=>0, :max_occurs=>1, :name=>:radius_distance_units}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:radius_in_units}, {:type=>"Address", :min_occurs=>0, :max_occurs=>1, :name=>:address}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:allow_service_of_address}], :base=>"GeoTarget", :ns=>0}, :AdFormatSpec=>{:fields=>[{:type=>"SiteConstants.AdFormat", :min_occurs=>0, :max_occurs=>1, :name=>:format}]}, :Range=>{:fields=>[{:type=>"ComparableValue", :min_occurs=>0, :max_occurs=>1, :name=>:min}, {:type=>"ComparableValue", :min_occurs=>0, :max_occurs=>1, :name=>:max}]}, :AdGroupCriterionLimitExceeded=>{:fields=>[{:type=>"AdGroupCriterionLimitExceeded.CriteriaLimitType", :min_occurs=>0, :max_occurs=>1, :name=>:limit_type}], :base=>"EntityCountLimitExceeded", :ns=>0}, :LongValue=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:number}], :base=>"NumberValue", :ns=>0}, :LongAttribute=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:value}], :base=>"Attribute"}, :KeywordMatchTypeSearchParameter=>{:fields=>[{:type=>"KeywordMatchType", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:keyword_match_types}], :base=>"SearchParameter"}, :PolicyViolationKey=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:policy_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:violating_text}], :ns=>0}, :NetworkTarget=>{:fields=>[{:type=>"NetworkCoverageType", :min_occurs=>0, :max_occurs=>1, :name=>:network_coverage_type}], :base=>"Target", :ns=>0}, :MobilePlatformTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:platform_name}], :base=>"MobileTarget", :ns=>0}, :InStreamAdInfo=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:max_ad_duration}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:min_ad_duration}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:median_ad_duration}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:pre_roll_percent}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:mid_roll_percent}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:post_roll_percent}]}, :ExcludedKeywordSearchParameter=>{:fields=>[{:type=>"Keyword", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:keywords}], :base=>"SearchParameter"}, :GenderTarget=>{:fields=>[{:type=>"GenderTarget.Gender", :min_occurs=>0, :max_occurs=>1, :name=>:gender}], :base=>"DemographicTarget", :ns=>0}}
    TARGETINGIDEASERVICE_NAMESPACES = ["https://adwords.google.com/api/adwords/cm/v201003"]

    def self.get_method_signature(method_name)
      return TARGETINGIDEASERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return TARGETINGIDEASERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return TARGETINGIDEASERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
