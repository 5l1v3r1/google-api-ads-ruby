#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.1 on 2011-09-21 12:00:53.

require 'adwords_api/errors'

module AdwordsApi; module V201003; module AdParamService
  class AdParamServiceRegistry
    ADPARAMSERVICE_METHODS = {:mutate=>{:output=>{:fields=>[{:type=>"AdParam", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:rval}], :name=>"mutate_response"}, :input=>[{:type=>"AdParamOperation", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:operations}]}, :get=>{:output=>{:fields=>[{:type=>"AdParamPage", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_response"}, :input=>[{:type=>"AdParamSelector", :min_occurs=>0, :max_occurs=>1, :name=>:selector}]}}
    ADPARAMSERVICE_TYPES = {:Operation=>{:fields=>[{:type=>"Operator", :min_occurs=>0, :max_occurs=>1, :name=>:operator}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:operation_type}], :abstract=>true}, :PolicyViolationKey=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:policy_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:violating_text}]}, :AdParam=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:ad_group_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:criterion_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:insertion_text}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:param_index}]}, :SoapHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:auth_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_customer_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_email}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:developer_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:user_agent}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:validate_only}]}, :AdParamOperation=>{:fields=>[{:type=>"AdParam", :min_occurs=>0, :max_occurs=>1, :name=>:operand}], :base=>"Operation"}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:request_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:operations}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:response_time}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:units}]}, :"PolicyViolationError.Part"=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:index}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:length}]}, :AdParamPage=>{:fields=>[{:type=>"AdParam", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:entries}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:total_num_entries}]}, :Paging=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:start_index}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:number_results}]}, :AdParamSelector=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:ad_group_ids}, {:type=>"long", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:criteria_id}, {:type=>"Paging", :min_occurs=>0, :max_occurs=>1, :name=>:paging}]}}
    ADPARAMSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return ADPARAMSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return ADPARAMSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return ADPARAMSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
