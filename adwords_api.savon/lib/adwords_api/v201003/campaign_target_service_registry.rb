#!/usr/bin/ruby
# This is auto-generated code, changes will be overwritten.
# Copyright:: Copyright 2011, Google Inc. All Rights Reserved.
# License:: Licensed under the Apache License,Version 2.0 (the "License").
#
# Code generated by AdsCommon library 0.5.1 on 2011-09-21 12:01:31.

require 'adwords_api/errors'

module AdwordsApi; module V201003; module CampaignTargetService
  class CampaignTargetServiceRegistry
    CAMPAIGNTARGETSERVICE_METHODS = {:mutate=>{:output=>{:fields=>[{:type=>"CampaignTargetReturnValue", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"mutate_response"}, :input=>[{:type=>"CampaignTargetOperation", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:operations}]}, :get=>{:output=>{:fields=>[{:type=>"CampaignTargetPage", :min_occurs=>0, :max_occurs=>1, :name=>:rval}], :name=>"get_response"}, :input=>[{:type=>"CampaignTargetSelector", :min_occurs=>0, :max_occurs=>1, :name=>:selector}]}}
    CAMPAIGNTARGETSERVICE_TYPES = {:MobilePlatformTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:platform_name}], :base=>"MobileTarget"}, :ListReturnValue=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:list_return_value_type}], :abstract=>true}, :Target=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:target_type}], :abstract=>true}, :NetworkTarget=>{:fields=>[{:type=>"NetworkCoverageType", :min_occurs=>0, :max_occurs=>1, :name=>:network_coverage_type}], :base=>"Target"}, :GenderTarget=>{:fields=>[{:type=>"GenderTarget.Gender", :min_occurs=>0, :max_occurs=>1, :name=>:gender}], :base=>"DemographicTarget"}, :MobileTargetList=>{:fields=>[{:type=>"MobileTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :CampaignTargetSelector=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:campaign_ids}]}, :MobileTarget=>{:fields=>[], :base=>"Target", :abstract=>true}, :EntityNotFound=>{:fields=>[{:type=>"EntityNotFound.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}], :base=>"ApiError"}, :AdScheduleTarget=>{:fields=>[{:type=>"DayOfWeek", :min_occurs=>0, :max_occurs=>1, :name=>:day_of_week}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:start_hour}, {:type=>"MinuteOfHour", :min_occurs=>0, :max_occurs=>1, :name=>:start_minute}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:end_hour}, {:type=>"MinuteOfHour", :min_occurs=>0, :max_occurs=>1, :name=>:end_minute}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:bid_multiplier}], :base=>"Target"}, :Operation=>{:fields=>[{:type=>"Operator", :min_occurs=>0, :max_occurs=>1, :name=>:operator}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:operation_type}], :abstract=>true}, :GeoTarget=>{:fields=>[{:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:excluded}], :base=>"Target", :abstract=>true}, :CampaignTargetPage=>{:fields=>[{:type=>"TargetList", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:entries}], :base=>"Page"}, :GeoTargetList=>{:fields=>[{:type=>"GeoTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :PlatformTarget=>{:fields=>[{:type=>"PlatformType", :min_occurs=>0, :max_occurs=>1, :name=>:platform_type}], :base=>"Target"}, :GeoPoint=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:latitude_in_micro_degrees}, {:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:longitude_in_micro_degrees}]}, :AgeTarget=>{:fields=>[{:type=>"AgeTarget.Age", :min_occurs=>0, :max_occurs=>1, :name=>:age}], :base=>"DemographicTarget"}, :Page=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:total_num_entries}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:page_type}], :abstract=>true}, :CampaignTargetOperation=>{:fields=>[{:type=>"TargetList", :min_occurs=>0, :max_occurs=>1, :name=>:operand}], :base=>"Operation"}, :PlatformTargetList=>{:fields=>[{:type=>"PlatformTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :OperationAccessDenied=>{:fields=>[{:type=>"OperationAccessDenied.Reason", :min_occurs=>0, :max_occurs=>1, :name=>:reason}], :base=>"ApiError"}, :LanguageTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:language_code}], :base=>"Target"}, :Address=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:street_address}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:street_address2}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:city_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:postal_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}]}, :CampaignTargetReturnValue=>{:fields=>[{:type=>"TargetList", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:value}], :base=>"ListReturnValue"}, :SoapHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:auth_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_customer_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:client_email}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:developer_token}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:user_agent}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:validate_only}]}, :PolygonTarget=>{:fields=>[{:type=>"GeoPoint", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:vertices}], :base=>"GeoTarget"}, :CityTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:city_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_code}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :base=>"GeoTarget"}, :LanguageTargetList=>{:fields=>[{:type=>"LanguageTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :MetroTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:metro_code}], :base=>"GeoTarget"}, :NetworkTargetList=>{:fields=>[{:type=>"NetworkTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :SoapResponseHeader=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:request_id}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:operations}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:response_time}, {:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:units}]}, :ProvinceTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:province_code}], :base=>"GeoTarget"}, :CountryTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :base=>"GeoTarget"}, :TargetList=>{:fields=>[{:type=>"long", :min_occurs=>0, :max_occurs=>1, :name=>:campaign_id}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:target_list_type}], :abstract=>true}, :DemographicTargetList=>{:fields=>[{:type=>"DemographicTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :MobileCarrierTarget=>{:fields=>[{:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:carrier_name}, {:type=>"string", :min_occurs=>0, :max_occurs=>1, :name=>:country_code}], :base=>"MobileTarget"}, :AdScheduleTargetList=>{:fields=>[{:type=>"AdScheduleTarget", :min_occurs=>0, :max_occurs=>:unbounded, :name=>:targets}], :base=>"TargetList"}, :DemographicTarget=>{:fields=>[{:type=>"int", :min_occurs=>0, :max_occurs=>1, :name=>:bid_modifier}], :base=>"Target", :abstract=>true}, :ProximityTarget=>{:fields=>[{:type=>"GeoPoint", :min_occurs=>0, :max_occurs=>1, :name=>:geo_point}, {:type=>"ProximityTarget.DistanceUnits", :min_occurs=>0, :max_occurs=>1, :name=>:radius_distance_units}, {:type=>"double", :min_occurs=>0, :max_occurs=>1, :name=>:radius_in_units}, {:type=>"Address", :min_occurs=>0, :max_occurs=>1, :name=>:address}, {:type=>"boolean", :min_occurs=>0, :max_occurs=>1, :name=>:allow_service_of_address}], :base=>"GeoTarget"}}
    CAMPAIGNTARGETSERVICE_NAMESPACES = []

    def self.get_method_signature(method_name)
      return CAMPAIGNTARGETSERVICE_METHODS[method_name.to_sym]
    end

    def self.get_type_signature(type_name)
      return CAMPAIGNTARGETSERVICE_TYPES[type_name.to_sym]
    end

    def self.get_namespace(index)
      return CAMPAIGNTARGETSERVICE_NAMESPACES[index]
    end
  end

  # Base class for exceptions.
  class ApplicationException < AdwordsApi::Errors::ApiException
    attr_reader :message  # string
    attr_reader :application_exception_type  # string
  end

  # Exception class for holding a list of service errors.
  class ApiException < ApplicationException
    attr_reader :errors  # ApiError
    def initialize(exception_fault)
      @array_fields ||= []
      @array_fields << 'errors'
      super(exception_fault)
    end
  end
end; end; end
